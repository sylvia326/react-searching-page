{"version":3,"sources":["component/search.jsx","component/main.jsx","component/app.jsx","index.js"],"names":["Search","search","searchName","input","value","trim","props","setSearchName","className","type","placeholder","ref","onClick","this","Component","Main","state","initView","loading","users","errorMsg","newProps","setState","url","axios","get","then","response","result","data","console","log","items","map","item","name","login","html_url","avatarUrl","avatar_url","catch","error","message","user","index","key","href","target","src","style","width","App","ReactDOM","render","document","getElementById"],"mappings":"uPAEsBA,E,2MAIlBC,OAAO,WAEH,IAAMC,EAAY,EAAKC,MAAMC,MAAMC,OAChCH,GAEC,EAAKI,MAAMC,cAAcL,I,wEAKxB,IAAD,OACJ,OACI,6BAASM,UAAU,aACf,wBAAIA,UAAU,qBAAd,uBACA,6BACI,2BAAOC,KAAK,OAAOC,YAAY,4BAA4BC,IAAK,SAAAR,GAAK,OAAI,EAAKA,MAAOA,KACrF,4BAAQS,QAASC,KAAKZ,QAAtB,gB,GApBiBa,a,iBCEfC,E,2MAKlBC,MAAO,CACHC,UAAU,EACVC,SAAS,EACTC,MAAO,KACPC,SAAU,M,yFAIYC,GAAW,IAAD,OACzBnB,EAAamB,EAAbnB,WAEPW,KAAKS,SAAS,CACVL,UAAU,EACVC,SAAQ,IAGZ,IAAMK,EAAG,gDAA4CrB,GACrDsB,IAAMC,IAAIF,GACLG,MAAK,SAAAC,GAEF,IAAMC,EAASD,EAASE,KACxBC,QAAQC,IAAIH,GACZ,IAAMT,EAAQS,EAAOI,MAAMC,KAAI,SAAAC,GAAI,MAAK,CAACC,KAAKD,EAAKE,MAAOb,IAAIW,EAAKG,SAAUC,UAAWJ,EAAKK,eAG7F,EAAKjB,SAAS,CAACJ,SAAQ,EAAMC,aAEhCqB,OAAM,SAAAC,GAEH,EAAKnB,SAAS,CAACJ,SAAQ,EAAOE,SAASqB,EAAMC,e,+BAKhD,IAAD,EACyC7B,KAAKG,MAA3CC,EADH,EACGA,SAAUC,EADb,EACaA,QAASC,EADtB,EACsBA,MAAOC,EAD7B,EAC6BA,SAC3BlB,EAAcW,KAAKP,MAAnBJ,WACN,OAAIe,EACO,+DAAqCf,EAArC,KACAgB,EACA,4CACAE,EACA,gCAAMA,EAAN,KAGH,yBAAKZ,UAAU,OAEPW,EAAMc,KAAI,SAACU,EAAKC,GAAN,OACN,yBAAKpC,UAAU,OAAOqC,IAAKD,GAC3B,uBAAGE,KAAMH,EAAKpB,IAAKwB,OAAO,UACtB,yBAAKC,IAAKL,EAAKL,UAAWW,MAAO,CAACC,MAAO,QAE7C,uBAAG1C,UAAU,aAAamC,EAAKR,e,GAzDxBrB,aCAbqC,E,2MAClBnC,MAAQ,CACJd,WAAW,I,EAEfK,cAAgB,SAACL,GACb,EAAKoB,SAAS,CAACpB,gB,wEAIf,OACI,yBAAKM,UAAU,aACd,kBAAC,EAAD,CAAQD,cAAeM,KAAKN,gBAC5B,kBAAC,EAAD,CAAML,WAAYW,KAAKG,MAAMd,kB,GAZRY,a,MCGlCsC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a9bda781.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nexport default  class Search extends Component {\n    static propTypes = {\n        setSearchName: PropTypes.func.isRequired\n    }\n    search=()=>{\n       //得到输入的关键字\n        const searchName= this.input.value.trim()\n        if(searchName){\n            // 搜索\n            this.props.setSearchName(searchName)\n        }\n\n\n    }\n    render(){\n        return(\n            <section className=\"jumbotron\">\n                <h3 className=\"jumbotron-heading\">Search Github Users</h3>\n                <div>\n                    <input type=\"text\" placeholder=\"enter the name you search\" ref={input => this.input= input}/>\n                    <button onClick={this.search}>Search</button>\n                </div>\n            </section>\n\n        )\n    }\n}","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport axios from 'axios'\n\nexport default  class Main extends Component {\n\n    static propTypes = {\n        searchName: PropTypes.string.isRequired\n    }\n    state ={\n        initView: true,\n        loading: false,\n        users: null,\n        errorMsg: null\n    }\n\n    // 当组件接受到新的属性时回调\n    componentWillReceiveProps(newProps) { //指定了新的searchName。需要请求\n        const {searchName} =newProps\n        // 更新状态（请求中）\n        this.setState({\n            initView: false,\n            loading:true\n        })\n            // 发axios请求\n        const url = `https://api.github.com/search/users?q=${searchName}`\n        axios.get(url)\n            .then(response => {\n                //得到响应数据\n                const result = response.data\n                console.log(result)\n                const users = result.items.map(item => ({name:item.login, url:item.html_url, avatarUrl: item.avatar_url}))\n\n                // 更新状态（成功）\n                this.setState({loading:false,users})\n            })\n            .catch(error => {\n                //更新状态（失败）\n                this.setState({loading:false, errorMsg:error.message})\n\n            })\n    }\n\n    render(){\n        const {initView, loading, users, errorMsg} = this.state\n        const{searchName} = this.props\n        if (initView) {\n            return <h2> Please put the keywords above. {searchName} </h2>\n        } else if (loading) {\n            return <h2> Loading... </h2>\n        } else if (errorMsg) {\n            return <h2> {errorMsg} </h2>\n        } else {\n            return (\n                <div className=\"row\">\n                    {\n                        users.map((user,index) => (\n                            <div className=\"card\" key={index}>\n                            <a href={user.url} target=\"_blank\">\n                                <img src={user.avatarUrl} style={{width: 100}}/>\n                            </a>\n                            <p className=\"card-text\">{user.name}</p>\n                        </div>\n                        ))\n                    }\n\n                </div>\n            )\n        }\n    }\n}","import React, {Component} from 'react'\nimport Search from \"./search\";\nimport Main from \"./main\";\n\nexport default  class App extends Component {\n    state = {\n        searchName:''\n    }\n    setSearchName = (searchName) => {\n        this.setState({searchName})\n    }\n\n    render(){\n        return(\n            <div className=\"container\">\n             <Search setSearchName={this.setSearchName}/>\n             <Main searchName={this.state.searchName}/>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './component/app';\nimport './index.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}